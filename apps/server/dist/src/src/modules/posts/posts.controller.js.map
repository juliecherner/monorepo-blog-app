{"version":3,"file":"posts.controller.js","sourceRoot":"","sources":["../../../../../src/modules/posts/posts.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAWwB;AAExB,iCAAsC;AACtC,iCAAsC;AACtC,6DAAyD;AACzD,uDAAmD;AAEnD,6CAAyD;AACzD,yDAAmD;AAI5C,IAAM,eAAe,6BAArB,MAAM,eAAgB,SAAQ,gCAIpC;IACC,YACmB,WAIhB;QAED,KAAK,CAAC,WAAW,CAAC,CAAC;QANF,gBAAW,GAAX,WAAW,CAI3B;IAGH,CAAC;IAGK,AAAN,KAAK,CAAC,gBAAgB;QACpB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC/C,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;IAC3C,CAAC;IAID,MAAM,CAAS,SAAwB;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAGD,OAAO,CAAc,EAAU;QAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAKD,MAAM,CAAc,EAAU,EAAU,SAAwB;QAC9D,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IAID,MAAM,CAAc,EAAU;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;CACF,CAAA;AA5BO;IADL,IAAA,YAAG,GAAE;;;;uDAIL;AAID;IAFC,IAAA,iBAAQ,EAAC,mBAAU,CAAC,OAAO,CAAC;IAC5B,IAAA,aAAI,GAAE;IACC,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAAY,qBAAa;;6CAEtC;AAGD;IADC,IAAA,YAAG,EAAC,KAAK,CAAC;IACF,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;8CAEnB;AAKD;IAHC,IAAA,cAAK,EAAC,KAAK,CAAC;IACZ,IAAA,uBAAa,EAAC,SAAS,CAAC;IACxB,IAAA,kBAAS,EAAC,gCAAa,CAAC;IACjB,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;IAAc,WAAA,IAAA,aAAI,GAAE,CAAA;;6CAAY,qBAAa;;6CAE/D;AAID;IAFC,IAAA,iBAAQ,EAAC,mBAAU,CAAC,UAAU,CAAC;IAC/B,IAAA,eAAM,EAAC,KAAK,CAAC;IACN,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;6CAElB;0BA3CU,eAAe;IAF3B,IAAA,iBAAO,EAAC,cAAc,CAAC;IACvB,IAAA,mBAAU,EAAC,OAAO,CAAC;qCAOc,0BAAW;GANhC,eAAe,CA4C3B","sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Delete,\n  Param,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { CreatePostDto } from 'types';\nimport { UpdatePostDto } from 'types';\nimport { BaseController } from '../base/base.controller';\nimport { BaseService } from '../base/base.service';\nimport { PostModel } from './post.model';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { PostEditGuard } from './posts-edit.guard';\n\n@ApiTags('Posts routes')\n@Controller('posts')\nexport class PostsController extends BaseController<\n  PostModel,\n  CreatePostDto,\n  UpdatePostDto\n> {\n  constructor(\n    private readonly postService: BaseService<\n      PostModel,\n      CreatePostDto,\n      UpdatePostDto\n    >,\n  ) {\n    super(postService);\n  }\n\n  @Get()\n  async findAllModifined() {\n    const posts = await this.postService.findAll();\n    return { message: 'hello world', posts };\n  }\n\n  @HttpCode(HttpStatus.CREATED)\n  @Post()\n  create(@Body() createDto: CreatePostDto) {\n    return this.postService.create(createDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.postService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiBearerAuth('default')\n  @UseGuards(PostEditGuard)\n  update(@Param('id') id: string, @Body() updateDto: UpdatePostDto) {\n    return this.postService.update(id, updateDto);\n  }\n\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.postService.remove(id);\n  }\n}\n"]}