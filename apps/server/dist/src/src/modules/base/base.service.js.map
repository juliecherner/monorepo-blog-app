{"version":3,"file":"base.service.js","sourceRoot":"","sources":["../../../../../src/modules/base/base.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA4C;AAC5C,+CAA+C;AAC/C,uCAAiC;AACjC,6CAAyC;AAElC,IAAe,WAAW,yBAA1B,MAAe,WAAW;IAC/B,YACgD,SAAwB;QAAxB,cAAS,GAAT,SAAS,CAAe;IACrE,CAAC;IAEJ,KAAK,CAAC,MAAM,CAAC,SAAqB;QAChC,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAAW;QACpB,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,EAAU;QACtB,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,SAAqB;QAC5C,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,EAAE,SAAgB,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;IACrF,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU;QACrB,MAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;CACF,CAAA;sBA7BqB,WAAW;IADhC,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,sBAAW,EAAC,sBAAS,CAAC,IAAI,CAAC,CAAA;qCAA6B,gBAAK;GAF5C,WAAW,CA6BhC","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { BaseModel } from './base.model';\n@Injectable()\nexport abstract class BaseService<TModel, TCreateDto, TUpdateDto> {\n  constructor(\n    @InjectModel(BaseModel.name) private readonly baseModel: Model<TModel>,\n  ) {}\n\n  async create(createDto: TCreateDto) {\n    const createdModel = new this.baseModel(createDto);\n    return await createdModel.save();\n  }\n\n  async find(filter: any) {\n    return await this.baseModel.find(filter);\n  }\n\n  async findAll() {\n    return await this.baseModel.find();\n  }\n\n  async findOne(id: string) {\n    return await this.baseModel.findById(id);\n  }\n\n  async update(id: string, updateDto: TUpdateDto) {\n    return await this.baseModel.findByIdAndUpdate(id, updateDto as any, { new: true });\n  }\n\n  async remove(id: string) {\n    await this.baseModel.findByIdAndRemove(id);\n  }\n}\n"]}